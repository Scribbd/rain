Description: |
  Creates a web application with a static website using S3 and CloudFront, 
  an API Gateway REST API, and a DynamoDB table, with Cognito authentication.
  Generated by CloudFormation Rain (rain build -b webapp webapp).
  Apache-2.0 License. Adapt this template to your needs and thoruoughly test
  it before introducing it in a production environment. **WARNING** This
  template will create resources in your account that may incur billing
  charges.

Parameters:

  AppName:
    Type: String
    Description: This name is used as a prefix for resource names

Resources:

  ApiHandler:
    Type: AWS::Lamda::Function
    Properties:
      Handler: bootstrap
      Runtime: provided.al2023
      Code: !Rain::S3
        Run: buildapi.sh
        Zip: false
        Path: api/dist/lambda-handler.zip
        KeyProperty: S3Key
        BucketProperty: S3Bucket
      Role: !GetAtt ApiHandlerRole.Arn

  ApiHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonAPIGatewayInvokePolicy

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Join
          - ""
          - - !Ref AppName
            - !Select
              - 2
              - !Split
                - /
                - !Ref AWS::StackId
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Distribution:
    Type: AWS::CloudFront::Distribution
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_174
            comment: Using the default cloudfront certificate with no aliases
      guard:
        SuppressedRules:
          - CLOUDFRONT_CUSTOM_SSL_CERTIFICATE
          - CLOUDFRONT_ORIGIN_FAILOVER_ENABLED
          - CLOUDFRONT_SNI_ENABLED
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: !Sub ${AppName}-origin-1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket: !GetAtt CloudFrontLogsBucket.RegionalDomainName
        Origins:
          - DomainName: !GetAtt ContentBucket.RegionalDomainName
            Id: !Sub ${AppName}-origin-1
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
            S3OriginConfig:
              OriginAccessIdentity: ""
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        WebACLId: !GetAtt WebACL.Arn

  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: WebACLWithAMR
      Scope: CLOUDFRONT
      Description: Web ACL with AWS Managed Rules
      DefaultAction: 
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: MetricForWebACLWithAMR
      Tags:
        - Key: Name
          Value: !Ref AppName
      Rules: 
        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 0
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: MetricForAMRCRS
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              ExcludedRules:
                - Name: NoUserAgent_HEADER

  Content:
    Type: !Rain::Module "../modules/bucket.yaml"
    Properties:
      AppName: !Sub ${AppName}-content
      Content: site
    Overrides:
      Bucket:
        Metadata:
          Version: 4
      BucketPolicyPolicy:
        Properties:
          PolicyDocument:
            Statement:
              - Action: s3:GetObject
                Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}/*
                Principal:
                  Service: cloudfront.amazonaws.com
                Condition:
                  StringEquals:
                    AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${Distribution}
              - Action: s3:*
                Condition:
                  Bool:
                    aws:SecureTransport: false
                Effect: Deny
                Principal:
                  AWS: '*'
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}
                  - !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}/*
              - Action: s3:PutObject
                Condition:
                  ArnLike:
                    aws:SourceArn: !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}
                  StringEquals:
                    aws:SourceAccount: !Ref AWS::AccountId
                Effect: Allow
                Principal:
                  Service: logging.s3.amazonaws.com
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}/*
            Version: "2012-10-17"

  CloudFrontLogs:
    Type: !Rain::Module "../modules/bucket.yaml"
    Properties:
      AppName: !Sub ${AppName}-cflogs
      Content: RAIN_NO_CONTENT
    Overrides:
      Bucket:
        Properties:
          OwnershipControls:
            Rules:
              - ObjectOwnership: BucketOwnerPreferred

Outputs:
  SiteURL:
    Value: !Sub "https://${Distribution.DomainName}"

